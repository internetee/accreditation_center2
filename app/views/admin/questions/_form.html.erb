<%= form_with model: [ :admin, @test, @test_category, @question ], local: true, class: 'question-form' do |form| %>
  <% if @question.errors.any? %>
    <div class="alert alert-danger">
      <h4><%= t('errors.template.header', count: @question.errors.count) %></h4>
      <ul>
        <% @question.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-section">
    <div class="form-row">
      <div class="form-group col-md-6">
        <%= form.label :text_et, t('admin.questions.text_et') %>
        <%= form.text_field :text_et, class: 'form-control', required: true %>
      </div>
      <div class="form-group col-md-6">
        <%= form.label :text_en, t('admin.questions.text_en') %>
        <%= form.text_field :text_en, class: 'form-control', required: true %>
      </div>
    </div>
    <div class="form-row">
      <div class="form-group col-md-6">
        <%= form.label :help_text_et, t('admin.questions.help_text_et') %>
        <%= form.text_field :help_text_et, class: 'form-control' %>
      </div>
      <div class="form-group col-md-6">
        <%= form.label :help_text_en, t('admin.questions.help_text_en') %>
        <%= form.text_field :help_text_en, class: 'form-control' %>
      </div>
    </div>
    <div class="form-row">
      <div class="form-group col-md-4">
        <%= form.label :question_type, t('admin.questions.type') %>
        <%= form.select :question_type, Question.question_types.keys.map { |k| [t("admin.questions.types.#{k}"), k] }, {}, class: 'form-control', required: true %>
      </div>
      <div class="form-group col-md-4">
        <%= form.label :display_order, t('admin.questions.display_order') %>
        <%= form.number_field :display_order, class: 'form-control', min: 0 %>
      </div>
      <div class="form-group col-md-4">
        <div class="form-check">
          <%= form.check_box :active, class: 'form-check-input' %>
          <%= form.label :active, t('admin.questions.active'), class: 'form-check-label' %>
        </div>
      </div>
    </div>
    <% if @question.multiple_choice? %>
      <div class="form-row">
        <div class="form-group col-12">
          <h4><%= t('admin.questions.answers') %></h4>
          <%= form.fields_for :answers do |af| %>
            <div class="answer-fields">
              <div class="form-row">
                <div class="form-group col-md-5">
                  <%= af.label :text_et, t('admin.answers.text_et') %>
                  <%= af.text_field :text_et, class: 'form-control', required: true %>
                </div>
                <div class="form-group col-md-5">
                  <%= af.label :text_en, t('admin.answers.text_en') %>
                  <%= af.text_field :text_en, class: 'form-control', required: true %>
                </div>
                <div class="form-group col-md-1">
                  <%= af.label :correct, t('admin.answers.correct') %>
                  <%= af.check_box :correct, class: 'form-check-input' %>
                </div>
                <div class="form-group col-md-1">
                  <%= af.label :_destroy, t('admin.answers.remove') %><br>
                  <%= af.check_box :_destroy, class: 'form-check-input' %>
                </div>
              </div>
            </div>
          <% end %>
          <div class="form-group">
            <%= link_to t('admin.answers.add'), '#', class: 'btn btn-sm btn-outline-primary', id: 'add-answer-link' %>
          </div>
        </div>
      </div>
    <% end %>
  </div>
  <div class="form-actions">
    <%= form.submit t('admin.questions.save'), class: 'btn btn-primary' %>
    <%= link_to t('admin.questions.cancel'), admin_test_test_category_questions_path(@test, @test_category), class: 'btn btn-secondary' %>
  </div>
<% end %>

<script>
// Simple JS to add answer fields dynamically (for demonstration; in production, use cocoon or similar)
document.addEventListener('DOMContentLoaded', function() {
  var addAnswerLink = document.getElementById('add-answer-link');
  if (addAnswerLink) {
    addAnswerLink.addEventListener('click', function(e) {
      e.preventDefault();
      var container = addAnswerLink.closest('.form-group').previousElementSibling;
      var index = container.querySelectorAll('.answer-fields').length;
      var template = container.querySelector('.answer-fields');
      if (!template) return;
      var clone = template.cloneNode(true);
      clone.querySelectorAll('input').forEach(function(input) {
        var name = input.getAttribute('name');
        if (name) {
          name = name.replace(/\[\d+\]/, '[' + index + ']');
          input.setAttribute('name', name);
        }
        if (input.type === 'text') input.value = '';
        if (input.type === 'checkbox') input.checked = false;
      });
      container.appendChild(clone);
    });
  }
});
</script>

<style>
  .question-form {
    max-width: 700px;
    margin: 0 auto;
    padding: 20px;
  }
  .form-section {
    margin-bottom: 30px;
    padding: 20px;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    background: #f8f9fa;
  }
  .form-row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -10px;
    margin-left: -10px;
  }
  .form-group {
    padding-right: 10px;
    padding-left: 10px;
    margin-bottom: 20px;
  }
  .col-md-4 {
    flex: 0 0 33.333333%;
    max-width: 33.333333%;
  }
  .col-md-5 {
    flex: 0 0 41.666667%;
    max-width: 41.666667%;
  }
  .col-md-1 {
    flex: 0 0 8.333333%;
    max-width: 8.333333%;
  }
  .col-12 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  .form-control {
    display: block;
    width: 100%;
    padding: 0.375rem 0.75rem;
    font-size: 1rem;
    line-height: 1.5;
    color: #495057;
    background-color: #fff;
    border: 1px solid #ced4da;
    border-radius: 0.25rem;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  }
  .form-control:focus {
    border-color: #80bdff;
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
  }
  .form-check {
    position: relative;
    display: block;
    padding-left: 1.25rem;
  }
  .form-check-input {
    position: absolute;
    margin-top: 0.3rem;
    margin-left: -1.25rem;
  }
  .form-check-label {
    margin-bottom: 0;
  }
  .form-actions {
    text-align: center;
    margin-top: 30px;
    padding-top: 20px;
    border-top: 1px solid #dee2e6;
  }
  .btn {
    display: inline-block;
    font-weight: 400;
    text-align: center;
    vertical-align: middle;
    user-select: none;
    border: 1px solid transparent;
    padding: 0.375rem 0.75rem;
    font-size: 1rem;
    line-height: 1.5;
    border-radius: 0.25rem;
    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    text-decoration: none;
    margin: 0 5px;
  }
  .btn-primary {
    color: #fff;
    background-color: #007bff;
    border-color: #007bff;
  }
  .btn-secondary {
    color: #fff;
    background-color: #6c757d;
    border-color: #6c757d;
  }
  .btn-outline-primary {
    color: #007bff;
    border-color: #007bff;
    background: transparent;
  }
  .btn-sm {
    padding: 4px 8px;
    font-size: 12px;
  }
</style> 